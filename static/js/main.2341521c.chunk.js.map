{"version":3,"sources":["components/redux/mainPageReducer.js","components/Footer/Footer.jsx","components/Header/Header.jsx","components/LineChart/LineChart.jsx","components/LineChart/LineChartContainer.jsx","components/SecondChart/SecondChart.js","components/SecondChart/SecondChartContainer.js","App.js","reportWebVitals.js","components/redux/redux.js","index.js"],"names":["Footer","className","Header","props","UPDATE_DATA","UPDATE_SECOND_DATA","CHART_TICK","SECOND_CHART_TICK","data","prev","i","Math","random","push","x","y","data2","prev2","dataToCurrent","currentData","startIndex","finishIndex","length","slice","initState","secondData","currentSecondData","startSecondIndex","finishSecondIndex","mainPageReducer","state","action","type","LineChart","useEffect","setTimeout","dataTick","datasets","label","fill","borderWidth","radius","borderColor","options","animation","parsing","interaction","intersect","plugins","legend","decimation","enabled","algorithm","scales","suggestedMax","source","maxRotation","autoSkip","suggestedMin","connect","mainPage","updateData","SecondChart","secondDataTick","updateSecondData","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","__store__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2341521c.chunk.js","sourcesContent":["\r\nconst UPDATE_DATA = 'UPDATE_DATA';\r\nconst UPDATE_SECOND_DATA = 'UPDATE_SECOND_DATA';\r\nconst CHART_TICK = 'CHART_TICK';\r\nconst SECOND_CHART_TICK = 'SECOND_CHART_TICK';\r\n\r\n\r\nlet data = [];\r\nlet prev = 100;\r\nfor (let i = 0; i < 10000; i++) {\r\n  prev += 50 - Math.random() * 100;\r\n  if (prev < 0) prev = 0;\r\n  data.push({x: i, y: prev});\r\n}\r\nlet data2 = [];\r\nlet prev2 = 100;\r\nfor (let i = 0; i < 10000; i++) {\r\n  prev2 += 5 - Math.random() * 10;\r\n  if (prev2 < 0) prev2 = 0;\r\n  data2.push({x: i, y: prev2});\r\n}\r\n\r\nconst dataToCurrent = (data, currentData, startIndex, finishIndex) => {\r\n    let newCurrentData = [];\r\n    if (data.length < finishIndex + 1){\r\n        return currentData;\r\n    } else {\r\n        newCurrentData = data.slice(startIndex, finishIndex + 1);\r\n        return newCurrentData;\r\n    }\r\n}\r\n\r\nlet initState = {\r\n        data: data,\r\n        secondData: data2,\r\n        currentData: [],\r\n        currentSecondData: [],\r\n        startIndex: 0,\r\n        startSecondIndex: 0,\r\n        finishIndex: 0,\r\n        finishSecondIndex: 0\r\n}\r\n\r\nconst mainPageReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        \r\n        case UPDATE_DATA:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    data: [state.data, action.data],\r\n                };\r\n            }\r\n        case UPDATE_SECOND_DATA:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    secondData: [state.secondData, action.data],\r\n                };\r\n            }\r\n        case CHART_TICK:\r\n            { \r\n                return {\r\n                    ...state,\r\n                    currentData: dataToCurrent(state.data, state.currentData, state.startIndex, state.finishIndex),\r\n                    finishIndex: dataToCurrent(state.data, state.currentData, state.startIndex, state.finishIndex) === state.currentData\r\n                    ? state.finishIndex : state.finishIndex + 1,\r\n                    startIndex: state.finishIndex - state.startIndex > 150 ? state.startIndex + 50 : state.startIndex\r\n                }\r\n            }\r\n        case SECOND_CHART_TICK:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    currentSecondData: dataToCurrent(state.secondData, state.currentSecondData, state.startSecondIndex, state.finishSecondIndex),\r\n                    finishSecondIndex: dataToCurrent(state.secondData, state.currentSecondData, state.startSecondIndex, state.finishSecondIndex) === state.currentSecondData\r\n                    ? state.finishSecondIndex : state.finishSecondIndex + 1,\r\n                    startSecondIndex: state.finishSecondIndex - state.startSecondIndex > 150 ? state.startSecondIndex + 50 : state.startSecondIndex\r\n                }\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default mainPageReducer;\r\n\r\nexport const updateData = (data) => ({ type: UPDATE_DATA, data});\r\nexport const updateSecondData = (data) => ({ type: UPDATE_SECOND_DATA, data});\r\nexport const dataTick = () => ({ type: CHART_TICK });\r\nexport const secondDataTick = () => ({ type: SECOND_CHART_TICK });\r\n\r\n","import './Footer.css';\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <div className = 'Footer'>\r\n            <h1>DESCRIPTION</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import './Header.css';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div className = 'Header'>\r\n            <h1>CONNECTION STATUS</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import { useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport './LineChart.css';\r\n\r\nconst LineChart = (props) => {\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => props.dataTick(), 50);\r\n    })\r\n    const decimation = {\r\n        enabled: false,\r\n        algorithm: 'min-max',\r\n      };\r\n    return (\r\n        <div className='LineChart'>\r\n            <h2 className='LineChart__title'>\r\n                Line Chart\r\n            </h2>\r\n            <div className='LineChart__chart'>\r\n                <Line\r\n                    data={{\r\n                        datasets: [{\r\n                            label: 'Frequency',\r\n                            data: props.data,\r\n                            fill: true,\r\n                            borderWidth: 1,\r\n                            radius: 0,\r\n                            borderColor: 'black',\r\n                        }],\r\n                    }}\r\n                    options={{\r\n                        animation: false,\r\n                        parsing: false,\r\n                        interaction: {\r\n                            intersect: false\r\n                        },\r\n                        plugins: {\r\n                            legend: false,\r\n                            decimation: decimation,\r\n                        },\r\n                        scales: {\r\n                            x: {\r\n                                type: 'linear',\r\n                                suggestedMax: props.startIndex + 400,\r\n                                source: 'auto',\r\n                                // Disabled rotation for performance\r\n                                maxRotation: 0,\r\n                                autoSkip: true,\r\n                            },\r\n                            y: {\r\n                                type: 'linear',\r\n                                suggestedMax: 600,\r\n                                suggestedMin: 0,\r\n                                source: 'auto',\r\n                                // Disabled rotation for performance\r\n                                maxRotation: 0,\r\n                                autoSkip: true,\r\n                            }\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default LineChart;","import { connect } from \"react-redux\"\r\nimport { dataTick, updateData } from \"../redux/mainPageReducer\"\r\nimport LineChart from \"./LineChart\"\r\n\r\n\r\nconst LineChartContainer = (props) => {\r\n    return(\r\n        <div>\r\n            <LineChart {...props}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.mainPage.currentData, \r\n    startIndex: state.mainPage.startIndex\r\n})\r\n\r\nexport default connect(mapStateToProps, { updateData, dataTick })(LineChartContainer);","import { useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport './SecondChart.css';\r\n\r\nconst SecondChart = (props) => {\r\ndebugger\r\n    useEffect(() => {\r\n        setTimeout(() => props.secondDataTick(), 50);\r\n    })\r\n    const decimation = {\r\n        enabled: false,\r\n        algorithm: 'min-max',\r\n      };\r\n    return (\r\n        <div className='SecondChart'>\r\n            <h2 className='SecondChart__title'>\r\n                Second Chart\r\n            </h2>\r\n            <div className='SecondChart__chart'>\r\n                <Line\r\n                    data={{\r\n                        datasets: [{\r\n                            label: 'Frequency',\r\n                            data: props.data,\r\n                            fill: true,\r\n                            borderWidth: 1,\r\n                            radius: 0,\r\n                            borderColor: 'black',\r\n                        }],\r\n                    }}\r\n                    options={{\r\n                        animation: false,\r\n                        parsing: false,\r\n                        interaction: {\r\n                            intersect: false\r\n                        },\r\n                        plugins: {\r\n                            legend: false,\r\n                            decimation: decimation,\r\n                        },\r\n                        scales: {\r\n                            x: {\r\n                                type: 'linear',\r\n                                suggestedMax: props.startIndex + 400,\r\n                                source: 'auto',\r\n                                // Disabled rotation for performance\r\n                                maxRotation: 0,\r\n                                autoSkip: true,\r\n                            },\r\n                            y: {\r\n                                type: 'linear',\r\n                                suggestedMax: 600,\r\n                                suggestedMin: 0,\r\n                                source: 'auto',\r\n                                // Disabled rotation for performance\r\n                                maxRotation: 0,\r\n                                autoSkip: true,\r\n                            }\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default SecondChart;","import { connect } from \"react-redux\"\r\nimport { secondDataTick, updateSecondData } from \"../redux/mainPageReducer\"\r\nimport SecondChart from \"./SecondChart\"\r\n\r\n\r\nconst SecondChartContainer = (props) => {\r\n    debugger\r\n    return(\r\n        <div>\r\n            <SecondChart {...props}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.mainPage.currentSecondData, \r\n    startIndex: state.mainPage.startSecondIndex\r\n})\r\n\r\nexport default connect(mapStateToProps, { updateSecondData, secondDataTick })(SecondChartContainer);","import './App.css';\nimport Footer from './components/Footer/Footer';\nimport Header from './components/Header/Header';\nimport LineChartContainer from './components/LineChart/LineChartContainer';\nimport NetworkChart from './components/NetworkChart/NetworkChart';\nimport SecondChartContainer from './components/SecondChart/SecondChartContainer';\n\nconst App = (props) => {\n  return(\n\n    <div className = 'App'>\n        <Header />\n        <LineChartContainer data = {props.data}/>\n        <SecondChartContainer data = {props.data} />\n        <Footer />\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport mainPageReducer from \"./mainPageReducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    mainPage: mainPageReducer,\r\n    \r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './components/redux/redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}