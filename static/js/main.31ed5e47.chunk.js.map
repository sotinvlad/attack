{"version":3,"sources":["components/redux/mainPageReducer.js","components/Footer/Footer.jsx","components/Header/Header.jsx","components/LineChart/LineChart.jsx","components/LineChart/LineChartContainer.jsx","components/NetworkChart/NetworkChart.jsx","App.js","reportWebVitals.js","components/redux/redux.js","index.js"],"names":["Footer","className","Header","props","UPDATE_DATA","data","prev","i","Math","random","push","x","y","initState","mainPageReducer","state","action","type","LineChart","delayBetweenPoints","length","animation","easing","duration","from","NaN","delay","ctx","xStarted","index","chart","scales","getPixelForValue","getDatasetMeta","datasetIndex","getProps","yStarted","datasets","label","fill","borderWidth","radius","borderColor","options","interaction","intersect","plugins","legend","onClick","updateData","connect","mainPage","NetworkChart","graph","nodes","id","title","edges","to","layout","hierarchical","color","height","events","select","event","getNetwork","network","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","__store__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31ed5e47.chunk.js","sourcesContent":["\r\nconst UPDATE_DATA = 'UPDATE_DATA';\r\n\r\n\r\nlet data = [];\r\nlet prev = 100;\r\nfor (let i = 0; i < 10000; i++) {\r\n  prev += 5 - Math.random() * 10;\r\n  if (prev < 0) prev = 0;\r\n  data.push({x: i, y: prev});\r\n}\r\n\r\nlet initState = {\r\n        data: data,\r\n}\r\n\r\nconst mainPageReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        \r\n        case UPDATE_DATA:\r\n            {\r\n                debugger\r\n                return {\r\n                    ...state,\r\n                    data: action.data,\r\n                };\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default mainPageReducer;\r\n\r\nexport const updateData = (data) => ({ type: UPDATE_DATA, data});\r\n\r\n","import './Footer.css';\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <div className = 'Footer'>\r\n            <h1>DESCRIPTION</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import './Header.css';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div className = 'Header'>\r\n            <h1>CONNECTION STATUS</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import { Line } from 'react-chartjs-2';\r\nimport './LineChart.css';\r\n\r\nconst LineChart = (props) => {\r\n    const totalDuration = 10000;\r\n    const delayBetweenPoints = totalDuration / props.data.length;\r\n    const previousY = (ctx) => ctx.index === 0 ? ctx.chart.scales.y.getPixelForValue(100) : ctx.chart.getDatasetMeta(ctx.datasetIndex).data[ctx.index - 1].getProps(['y'], true).y;\r\n    const animation = {\r\n        x: {\r\n            type: 'number',\r\n            easing: 'linear',\r\n            duration: delayBetweenPoints,\r\n            from: NaN, // the point is initially skipped\r\n            delay(ctx) {\r\n                if (ctx.type !== 'data' || ctx.xStarted) {\r\n                    return 0;\r\n                }\r\n                ctx.xStarted = true;\r\n                return ctx.index * delayBetweenPoints;\r\n            }\r\n        },\r\n        y: {\r\n            type: 'number',\r\n            easing: 'linear',\r\n            duration: delayBetweenPoints,\r\n            from: previousY,\r\n            delay(ctx) {\r\n                if (ctx.type !== 'data' || ctx.yStarted) {\r\n                    return 0;\r\n                }\r\n                ctx.yStarted = true;\r\n                return ctx.index * delayBetweenPoints;\r\n            }\r\n        }\r\n    };\r\n    return (\r\n        <div className='LineChart'>\r\n            <h2 className='LineChart__title'>\r\n                Line Chart\r\n            </h2>\r\n            <div className='LineChart__chart'>\r\n                <Line\r\n                    data={{\r\n                        datasets: [{\r\n                            label: 'Frequency',\r\n                            data: props.data,\r\n                            fill: true,\r\n                            borderWidth: 1,\r\n                            radius: 0,\r\n                            borderColor: 'black',\r\n                        }],\r\n                    }}\r\n                    options={{\r\n                        animation,\r\n                        interaction: {\r\n                            intersect: false\r\n                        },\r\n                        plugins: {\r\n                            legend: false\r\n                        },\r\n                        scales: {\r\n                            x: {\r\n                                type: 'linear'\r\n                            }\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n            <button onClick = {() => {\r\n                let data = [];\r\n                let prev = 100;\r\n                for (let i = 0; i < 10000; i++) {\r\n                  prev += 5 - Math.random() * 10;\r\n                  if (prev < 0) prev = 0;\r\n                  data.push({x: i, y: prev});\r\n                }\r\n                props.updateData(data);\r\n                }}>Update Data</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default LineChart;","import { connect } from \"react-redux\"\r\nimport { updateData } from \"../redux/mainPageReducer\"\r\nimport LineChart from \"./LineChart\"\r\n\r\n\r\nconst LineChartContainer = (props) => {\r\n    return(\r\n        <div>\r\n            <LineChart {...props}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.mainPage.data\r\n})\r\n\r\nexport default connect(mapStateToProps, { updateData })(LineChartContainer);","import Graph from 'react-graph-vis'\r\nimport './NetworkChart.css'\r\n\r\nconst NetworkChart = () => {\r\n    const graph = {\r\n        nodes: [\r\n            { id: 1, label: \"192.168.0.1\", title: \"node 1 tootip text\" },\r\n            { id: 2, label: \"192.168.0.2\", title: \"node 2 tootip text\" },\r\n            { id: 3, label: \"192.168.0.3\", title: \"node 3 tootip text\" },\r\n            { id: 4, label: \"192.168.0.4\", title: \"node 4 tootip text\" },\r\n            { id: 5, label: \"192.168.0.5\", title: \"node 5 tootip text\" }\r\n        ],\r\n        edges: [\r\n            { from: 2, to: 1 },\r\n            { from: 3, to: 1 },\r\n            { from: 4, to: 1 },\r\n            { from: 5, to: 1 }\r\n        ]\r\n    };\r\n\r\n    const options = {\r\n        layout: {\r\n            hierarchical: true\r\n        },\r\n        edges: {\r\n            color: \"#000000\"\r\n        },\r\n        height: \"400px\"\r\n    };\r\n\r\n    const events = {\r\n        select: function (event) {\r\n            var { nodes, edges } = event;\r\n        }\r\n    };\r\n    return (\r\n        \r\n        <div className=\"NetworkChart\">\r\n            <h2 className = 'NetworkChart__title'>\r\n                Network Chart\r\n            </h2>\r\n            <div className = 'NetworkChart__chart'>\r\n                <Graph\r\n                    graph={graph}\r\n                    options={options}\r\n                    events={events}\r\n                    getNetwork={network => {\r\n                        //  if you want access to vis.js network api you can set the state in a parent component using this property\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NetworkChart;","import './App.css';\nimport Footer from './components/Footer/Footer';\nimport Header from './components/Header/Header';\nimport LineChartContainer from './components/LineChart/LineChartContainer';\nimport NetworkChart from './components/NetworkChart/NetworkChart';\n\nconst App = (props) => {\n  return(\n    <div className = 'App'>\n        <Header />\n        <LineChartContainer data = {props.data}/>\n        <NetworkChart />\n        <Footer />\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport mainPageReducer from \"./mainPageReducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    mainPage: mainPageReducer,\r\n    \r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './components/redux/redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}